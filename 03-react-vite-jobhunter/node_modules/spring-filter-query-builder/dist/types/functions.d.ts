import { Item } from './item';
export declare abstract class Function implements Item {
    protected functionKeyWord: string;
    protected selector?: string | undefined;
    constructor(functionKeyWord: string, selector?: string | undefined);
    toString(): string;
}
export declare class CustomFunction extends Function {
    constructor(functionName: string, ...values: (string | number)[]);
}
export declare class Absolute extends Function {
    constructor(selector: string);
}
export declare class Average extends Function {
    constructor(selector: string);
}
export declare class Ceiling extends Function {
    constructor(selector: string);
}
export declare class Concat extends Function {
    constructor(...values: string[]);
}
export declare class Count extends Function {
    constructor(selector: string);
}
export declare class CountDistinct extends Function {
    constructor(selector: string);
}
export declare class CurrentDate extends Function {
    constructor();
}
export declare class CurrentTime extends Function {
    constructor();
}
export declare class CurrentTimestamp extends Function {
    constructor();
}
export declare class Min extends Function {
    constructor(selector: string);
}
export declare class Max extends Function {
    constructor(selector: string);
}
export declare class Sum extends Function {
    constructor(...selector: string[]);
}
export declare class Size extends Function {
    constructor(selector: string);
}
export declare class Length extends Function {
    constructor(selector: string);
}
export declare class Trim extends Function {
    constructor(selector: string);
}
export declare class Upper extends Function {
    constructor(selector: string);
}
export declare class Lower extends Function {
    constructor(selector: string);
}
